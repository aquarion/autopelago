---
- name: Kick sysctl
  ansible.builtin.command: sysctl -p

- name: Register filebot
  become_user: plex
  ansible.builtin.command: filebot --license {{ plex_home }}/.filebot_license.psm

- name: Update APT
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 21600

- name: Get running processes
  ansible.builtin.shell: set -o pipefail && ps -ef | grep -v grep | grep -w filebot_inotify.fifo | grep inotifywait | awk '{print $2}'
  register: running_processes
  listen: restart filebot inotify

- name: Kill running processes
  ansible.builtin.shell: kill {{ item }}
  with_items: "{{ running_processes.stdout_lines }}"
  listen: restart filebot inotify

- name: Wait for things to end before going on
  ansible.builtin.wait_for:
    path: /proc/{{ item }}/status
    state: absent
  with_items: "{{ running_processes.stdout_lines }}"
  ignore_errors: true
  register: killed_processes
  listen: restart filebot inotify

- name: Force kill stuck processes
  listen: restart filebot inotify
  ansible.builtin.shell: kill -9 {{ item }}
  with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"
  ignore_errors: true

- name: Restart inotify
  listen: restart filebot inotify
  ansible.builtin.command: "{{ plex_home }}/bin/inotify.sh"
  async: 1000
  poll: 0
