# $ git clone https://github.com/LINKIWI/orion-server.git
# $ cd orion-server
# # Install system dependencies
# $ sudo apt-get install libmysqlclient-dev python-dev
# # Install Python dependencies
# $ virtualenv env
# $ source env/bin/activate
# $ make bootstrap
# # Create the initial database tables
# $ make init-db


- name: Install nvm
  shell: >
    curl https://raw.githubusercontent.com/creationix/nvm/v0.7.0/install.sh | sh
    creates={{ orion_home }}/.nvm/nvm.sh
  become: yes
  become_user: "{{ orion_user }}"

- name: Install node and set version
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && nvm install {{ orion_node_version }} && nvm alias default {{ orion_node_version }}"
    creates={{ orion_home }}/.nvm/versions/node/{{ orion_node_version }}
  become: yes
  become_user: "{{ orion_user }}"

- name: Add the user 'orion'
  user:
    name: "{{ orion_user }}"
    comment: Orion Location Manager
    group: www-data
    home: '{{ orion_home }}'

- name: Create Orion home directory
  file:
    path: /srv/orion
    state: directory
    mode: 0755
    owner: "{{ orion_user }}"

- name: Get Orion Server
  git:
    repo: 'https://github.com/LINKIWI/orion-server'
    dest: "{{ orion_home }}/server"
    version: master
  become: yes
  become_user: "{{ orion_user }}"
  notify:
    - 'restart orion'

- name: Get Orion Web
  git:
    repo: 'https://github.com/LINKIWI/orion-web'
    dest: "{{ orion_home }}/web"
    version: master
  become: yes
  become_user: "{{ orion_user }}"
  notify:
    - 'rebuild orion-web'

- name: get Orion server requirements
  pip:
    requirements: "{{ orion_home }}/server/requirements.txt"
    virtualenv: "{{ orion_home }}/server/venv"
  become: yes
  become_user: "{{ orion_user }}"

- name: get Orion web requirements
  npm:
    path: "{{ orion_home }}/web"
    executable: '{{ orion_home }}/.nvm/versions/node/{{ orion_node_version }}/bin/npm'
  become: yes
  become_user: "{{ orion_user }}"
  notify:
    - 'rebuild orion-web'



- name: Create Orion config directory
  file:
    path: /etc/orion
    state: directory
    mode: 0755
    owner: "{{ orion_user }}"

- name: Configure Orion Server
  template:
    src: orion.config.json
    dest: /etc/orion/config.json
  become: yes
  become_user: "{{ orion_user }}"
  notify:
    - 'restart orion'

- name: Configure Orion service
  template:
    src: systemd.service
    dest: /etc/systemd/system/orion.service

- name: Create a new orion database
  mysql_db:
    name: '{{ orion_mysql_db }}'
    state: present

- name: Make Orion DB User
  mysql_user:
    name: '{{ orion_mysql_user }}'
    password: '{{ orion_mysql_password }}'
    priv: '{{ orion_mysql_db }}.*:ALL'
    state: present
  notify:
    - 'restart orion'

- name: Install gunicorn
  pip:
    name: gunicorn
    virtualenv: '{{ orion_home }}/server/venv'
  become: yes
  become_user: "{{ orion_user }}"
  notify:
    - 'restart orion'

- name: Configure Orion users
  htpasswd:
    path: "{{ orion_home }}/users.htpass"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    owner: "{{ orion_user }}"
    group: www-data
    mode: 0640
  loop: "{{ orion_htpass }}"