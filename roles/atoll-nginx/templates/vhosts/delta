# Ansible managed

upstream delta_backend {
    server localhost:8888 fail_timeout=0;
}

server {
    server_name voyeur.istic.net;
    listen 80;
    add_header X-WhyAmI "delta redirect";
    return 301 https://$host$request_uri;
}


map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 443 ssl;# http2; #http2 can provide a substantial improvement for streaming: https://blog.cloudflare.com/introducing-http2/
    listen [::]:443 ssl;# http2; #http2 can provide a substantial improvement for streaming: https://blog.cloudflare.com/introducing-http2/
    server_name voyeur.istic.net;
    server_tokens off;
    root /home/aquarion/code/stream-delta/public;

    index index.php;

    charset utf-8;

    location /index.php {
        try_files /not_exists @octane;
    }

    location / {
        try_files $uri $uri/ @octane;
    }

    location = /favicon.ico {
        access_log off; log_not_found off;
    }
    location = /robots.txt {
        access_log off; log_not_found off;
    }

    access_log off;
    error_log /var/log/nginx/voyeur.istic.net-error.log error;

    error_page 404 /index.php;

    location @octane {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix ?$query_string;
        }

        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_pass http://127.0.0.1:8000$suffix;
    }
    include /etc/nginx/snippets/errors.conf;
    include /etc/nginx/snippets/ssl/delta_ssl.conf;
    add_header X-WhyAmI delta;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ws.voyeur.istic.net;
    server_tokens off;
    root /home/aquarion/code/stream-delta/public;

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}