---

- name: Set timezone to UTC
  timezone:
    name: UTC

#- name: Install key
#  apt_key:
#    keyserver: keyserver.ubuntu.com
#    id: 8B48AD6246925553
#  when: ansible_distribution == 'Debian'


- name: Install Debian Backports
  apt_repository:
    repo: deb http://ftp.debian.org/debian stretch-backports main
    state: present
    filename: 'stretch-backports'
  when: ansible_distribution == 'Debian' and ansible_distribution_release == 'stretch'


- name: Enable Ubuntu universe repository
  when: ansible_distribution == 'Ubuntu'
  apt_repository:
    repo: "{{ item }}"
  loop:
    - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe"
    - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-updates universe"
    - "deb http://security.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-security universe"
  tags:
    - certbot



- name: Package list update
  apt: update_cache=yes cache_valid_time=21600

- name: Install System Packages
  apt:
    state: present
    pkg:
     - python3
     - build-essential
     - libffi-dev
       #- libssl-dev
     - apt-transport-https
     - ca-certificates
     - etckeeper
     - fail2ban
     - dnsutils
     - acl

- name: Install Debian System Packages
  when: ansible_distribution == 'Debian'
  apt:
    state: present
    pkg:
     - python-pip
     - python3-cryptography

- name: Install Ubuntu System packages
  when: ansible_distribution == 'Ubuntu'
  apt:
    state: present
    pkg:
     - software-properties-common
     - python3-pip
     - python-is-python3
  tags:
    - certbot

- name: python-is-python3
  file:
   dest: /usr/bin/python
   src: python3
   state: link

- name: Install Utility Packages
  apt:
    state: present
    pkg:
      - vim
      - screen
      - git
      - sudo
      - ruby
      - gpw
      - aptitude
      - apticron
      - moreutils
      - rzip

- name: config fail2ban
  lineinfile:
    path: /etc/fail2ban/fail2ban.conf
    regexp: '^logtarget'
    line: "logtarget = SYSLOG"
  notify:
    restart fail2ban


- name: Determine remote Python version.
  set_fact:
    python_version: "{% if 'python3' in ansible_python_interpreter|default('') %}python3{% else %}python{% endif %}"
  tags:
    aws

- name: Ensure Python libraries that ansible needs aree installed.
  apt:
    state: present
    pkg:
     - "{{ python_version }}-boto3"
     - "{{ python_version }}-boto"
     - "{{ python_version }}-passlib"
  tags:
     - aws
