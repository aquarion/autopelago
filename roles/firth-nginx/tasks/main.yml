---
- name: Install required packages
  ansible.builtin.apt:
    package: "{{ item }}"
    state: present
  loop:
    - nginx
    - python3-passlib
    - libnginx-mod-http-fancyindex
  tags:
    - streamsite

- name: Ensure /etc/nginx/snippets exists
  ansible.builtin.file:
    path: /etc/nginx/snippets
    state: directory
    owner: root
    group: root
    mode: "0755"
  tags:
    - nginx

- name: Ensure /etc/nginx/snippets/ssl exists
  ansible.builtin.file:
    path: /etc/nginx/snippets/ssl
    state: directory
    owner: root
    group: root
    mode: "0755"
  tags:
    - nginx

- name: Delete old ssl config snippits
  ansible.builtin.file:
    path: /etc/nginx/snippets/{{ item | basename }}
    state: absent
  with_fileglob:
    - templates/ssl/*
  notify:
    - Reload nginx
  tags:
    - streamsite
    - nginx

- name: Delete old proxy_params snippits
  ansible.builtin.file:
    path: /etc/nginx/proxy_params
    state: absent
  notify:
    - Reload nginx
  tags:
    - streamsite
    - nginx

- name: Configure ssl config snippits
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/nginx/snippets/ssl/{{ item | basename }}
    mode: "0644"
  with_fileglob:
    - templates/ssl/*
  notify:
    - Restart nginx
  tags:
    - streamsite
    - nginx

- name: Cloudflare IP Whitelist
  tags:
    - cloudflare
    - cloudflare_ips
  block:
    - name: Make sure /etc/nginx/tmp/ exists
      ansible.builtin.file:
        path: /etc/nginx/tmp
        state: directory
        owner: root
        group: root
        mode: "0755"
    - name: Download IPv4 list
      ansible.builtin.get_url:
        url: https://www.cloudflare.com/ips-v4
        dest: /etc/nginx/tmp/ip4.txt
        force: "yes"
        mode: "0755"
    - name: Download IPv6 list
      ansible.builtin.get_url:
        url: https://www.cloudflare.com/ips-v6
        dest: /etc/nginx/tmp/ip6.txt
        force: "yes"
        mode: "0755"
    - name: Slurp IP4 list
      ansible.builtin.slurp:
        src: /etc/nginx/tmp/ip4.txt
      register: ipv4list
    - name: Slurp IP6 list
      ansible.builtin.slurp:
        src: /etc/nginx/tmp/ip6.txt
      register: ipv6list

    - name: Update /etc/nginx/snippets/cloudflare-ips.nginx.conf
      ansible.builtin.copy:
        content: "# Ansible Managed\n{{ (ipv4list['content'] | b64decode + '\n' + ipv6list['content'] | b64decode) | regex_replace('([0-9a-f.:/]+)', 'allow \\1;')
          + '\nallow 127.0.0.1;\nallow ::1;\ndeny all;\n' }}"
        dest: /etc/nginx/snippets/cloudflare-ips.nginx.conf
        force: true
        mode: "0644"
        owner: root
        group: root
        remote_src: true
      notify: Reload nginx

- name: Configure config overrides
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/nginx/snippets/{{ item | basename }}
    mode: "0644"
  with_fileglob:
    - templates/nginx_snippets/*
  notify:
    - Reload nginx
  tags:
    - streamsite
    - nginx

- name: Configure conf.d items
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d/{{ item | basename }}
    mode: "0644"
  with_fileglob:
    - templates/nginx_confd/*
  notify:
    - Restart nginx
  tags:
    - streamsite
    - nginx

- name: Configure nginx sites as available
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-available/{{ item | basename }}
    mode: "0644"
  with_fileglob:
    - templates/vhosts/*
  notify:
    - Restart nginx
  tags:
    - streamsite
    - nginx
    - nginx_sites

- name: Configure nginx sites as enabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/{{ item | basename }}
    src: ../sites-available/{{ item | basename }}
    state: link
    mode: "0644"
  with_fileglob:
    - templates/vhosts/*
  notify:
    - Restart nginx
  tags:
    - streamsite
    - nginx_sites

- name: Configure dead nginx sites as disabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/{{ item | basename }}
    state: absent
  with_fileglob:
    - templates/deleted_vhosts/*
  notify:
    - Restart nginx
  tags:
    - streamsite
    - nginx_sites

- name: Configure dead nginx sites as unavailable
  ansible.builtin.file:
    path: /etc/nginx/sites-available/{{ item | basename }}
    state: absent
  with_fileglob:
    - templates/deleted_vhosts/*
  notify:
    - Restart nginx
  tags:
    - streamsite
    - nginx_sites

- name: Streamsite Basic Auth
  community.general.htpasswd:
    path: /etc/nginx/streamsite.htpass
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    mode: "0644"
  loop: "{{ streamsite_users }}"
  tags:
    - streamsite
    - nginx_sites

- name: Configure nginx redirects
  ansible.builtin.template:
    src: config/redirects.nginx.j2
    dest: /etc/nginx/conf.d/www_redirects.conf
    mode: "0644"
  vars:
    add_www:
      - aquarionics.com
      - cleartextcontent.co.uk
      - carcosadreams.co.uk
      - deathuntodarkness.org
    remove_www:
      - ludoistic.com
      - omnyom.com
      - factionfiction.net
      - warehousebasement.com
      - hubris.house
  notify:
    - Restart nginx
