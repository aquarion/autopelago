---
- name: Set timezone to UTC
  community.general.timezone:
    name: UTC

# - name: Install key
#  apt_key:
#    keyserver: keyserver.ubuntu.com
#    id: 8B48AD6246925553
#  when: ansible_distribution == 'Debian'

- name: Install Debian Backports
  ansible.builtin.apt_repository:
    repo: deb http://ftp.debian.org/debian stretch-backports main
    state: present
    filename: stretch-backports
  when: ansible_distribution == 'Debian' and ansible_distribution_release == 'stretch'

# - name: Install key
#  apt_key:
#    keyserver: keyserver.ubuntu.com
#    id: 8B48AD6246925553
#  when: ansible_distribution == 'Debian'

- name: Enable Ubuntu universe repository
  when: ansible_distribution == 'Ubuntu'
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
  loop:
    - deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe
    - deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-updates universe
    - deb http://security.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-security universe
  tags:
    - certbot

- name: Package list update
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 21600

- name: Install System Packages
  ansible.builtin.apt:
    state: present
    pkg:
      - python3
      - python3-pip
      - build-essential
      - libffi-dev
      - apt-transport-https
      - ca-certificates
      - etckeeper
      - fail2ban
      - dnsutils
      - acl
      - unattended-upgrades

- name: Install Debian System Packages
  when: ansible_distribution == 'Debian'
  ansible.builtin.apt:
    state: present
    pkg:
      - python3-cryptography

- name: Install Ubuntu System packages
  when: ansible_distribution == 'Ubuntu'
  ansible.builtin.apt:
    state: present
    pkg:
      - software-properties-common
      - python-is-python3
  tags:
    - certbot

- name: Python-is-python3
  ansible.builtin.file:
    dest: /usr/bin/python
    src: python3
    state: link

- name: Install Utility Packages
  ansible.builtin.apt:
    state: present
    pkg:
      - vim
      - screen
      - git
      - sudo
      - ruby
      - gpw
      - aptitude
      - apticron
      - moreutils
      - rzip

- name: Install certbot packages
  ansible.builtin.apt:
    state: present
    pkg:
      - certbot
      - python3-certbot-dns-route53
      - python3-certbot-nginx
      - python3-certbot-dns-cloudflare
  tags:
    - certbot

- name: Create secrets directory
  ansible.builtin.file:
    path: /root/.secrets
    state: directory
    mode: "0700"
  tags:
    - certbot

- name: Configure Cloudflare Secrets
  ansible.builtin.template:
    src: cloudflare.ini.j2
    dest: /root/.secrets/cloudflare.ini
    mode: "0400"
  tags:
    - certbot

- name: Config fail2ban
  ansible.builtin.lineinfile:
    path: /etc/fail2ban/fail2ban.conf
    regexp: ^logtarget
    line: logtarget = SYSLOG
  notify: Restart fail2ban

- name: Determine remote Python version.
  ansible.builtin.set_fact:
    python_version: "{% if 'python3' in ansible_python_interpreter | default('') %}python3{% else %}python{% endif %}"
  tags: aws

- name: Ensure Python libraries that ansible needs are installed.
  ansible.builtin.apt:
    state: present
    pkg:
      - "{{ python_version }}-boto3"
      - "{{ python_version }}-boto"
      - "{{ python_version }}-passlib"
  tags:
    - aws

- name: Increase inotify watches level (for VSCode)
  ansible.builtin.lineinfile:
    line: fs.inotify.max_user_watches=524288
    state: present
    dest: /etc/sysctl.conf
    regexp: ^fs.inotify.max_user_watches
  notify: Kick sysctl
  tags: sysctl

- name: Install and setup Redis
  tags: redis
  block:
    - name: Install Redis
      ansible.builtin.apt:
        state: present
        pkg:
          - redis-server
          - redis-tools

    - name: Configure Redis acl
      ansible.builtin.lineinfile:
        path: /etc/redis/redis.conf
        line: aclfile /etc/redis/users.acl
        regex: ^aclfile
      notify:
        - Restart redis

    - name: Ensure redis acl file exists
      ansible.builtin.file:
        path: /etc/redis/users.acl
        state: file
        mode: "0600"
        owner: redis
        group: redis

    - name: Configure Redis default user password
      ansible.builtin.lineinfile:
        path: /etc/redis/users.acl
        line: user default on +@all -DEBUG ~* >{{ redis_password }}
        regex: ^user default
      notify:
        - Reload Redis ACL

  rescue:
    - name: "Failure warning"
      ansible.builtin.debug:
        msg: "Redis tasks failed"
    - name: "Failure execution"
      ansible.builtin.command:
        cmd: "false"

- name: Remove ESM advert
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/20apt-esm-hook.conf
    state: absent
